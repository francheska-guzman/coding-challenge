{"version":3,"sources":["components/ForecastSummary.js","components/ForecastNextDays.js","components/Forecast.js","components/Footer.js","components/Header.js","components/HomeSummary.js","components/Home.js","components/Navigation.js","App.js","registerServiceWorker.js","index.js"],"names":["ForecastSummary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWeatherImage","bind","assertThisInitialized","changeToInteger","pressure","sunriseSunset","wind","visibility","id","react_default","a","createElement","className","value","integer","Math","round","isNaN","Date","toLocaleTimeString","props","state","day_1_city","name","day_1_weather","description","day_1_main","temp","temp_min","temp_max","day_1_sys","sunrise","day_1_wind","speed","sunset","humidity","Component","ForecastNextDays","dateFormat","undefined","dt_txt","date","split","dayOfWeek","getDay","weather","min","max","main","Forecast","day_1_coord","day_2","day_2_main","day_2_weather","day_2_wind","day_2_max","day_2_min","day_3","day_3_main","day_3_weather","day_3_wind","day_3_max","day_3_min","day_4","day_4_main","day_4_weather","day_4_wind","day_4_max","day_4_min","day_5","day_5_main","day_5_weather","day_5_wind","day_5_max","day_5_min","city","window","location","href","pop","join","first_city","setState","first_city_coord","first_city_main","first_city_sys","first_city_weather","first_city_wind","second_city","second_city_coord","second_city_main","second_city_sys","second_city_weather","second_city_wind","third_city","third_city_coord","third_city_main","third_city_sys","third_city_weather","third_city_wind","fourth_city","fourth_city_coord","fourth_city_main","fourth_city_sys","fourth_city_weather","fourth_city_wind","fifth_city","fifth_city_coord","fifth_city_main","fifth_city_sys","fifth_city_weather","fifth_city_wind","_this2","cityId","fetch","then","res","json","data","today","dd","getDate","mm","getMonth","yearMonthDay","getFullYear","days","i","list","length","push","m","maxD2","minD2","maxD3","minD3","maxD4","minD4","maxD5","minD5","catch","error","console","log","components_ForecastSummary","components_ForecastNextDays","tomorrow","Footer","rel","target","Header","HomeSummary","handleParams","handleWeatherTemperature","replace","temperature","Link","to","concat","Home","components_HomeSummary","Navigation","NavLink","App","fourth_city_clouds","ReactGA","initialize","pageview","api","coord","sys","_this3","BrowserRouter","Route","startsWith","path","component","components_Header","components_Navigation","Switch","exact","components_Home","components_Forecast","components_Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8bbc4e97.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../weather-icons/weather-icons.min.css';\n\nclass ForecastSummary extends Component {\n  constructor(){\n    super();\n    this.handleWeatherImage = this.handleWeatherImage.bind(this);\n    this.changeToInteger = this.changeToInteger.bind(this);\n    this.pressure = this.pressure.bind(this);\n    this.sunriseSunset = this.sunriseSunset.bind(this);\n    this.wind = this.wind.bind(this);\n    this.visibility = this.visibility.bind(this);\n}\n\n  handleWeatherImage(id) {\n    // console.log(id);\n    if (id >= 200 && id <= 232) { return <i className=\"wi wi-thunderstorm\"></i> }\n    else if (id >= 300 && id <= 321) { return <i className=\"wi wi-sleet\"></i> }\n    else if (id >= 500 && id <= 531) { return <i className=\"wi wi-showers\"></i> }\n    else if (id >= 600 && id <= 622) { return <i className=\"wi wi-snow\"></i> }\n    else if (id >= 700 && id <= 781) { return <i className=\"wi wi-fog\"></i> }\n    else if (id === 800) { return <i className=\"wi wi-day-cloudy\"></i> }\n    else if (id >= 801 && id <= 804) { return <i className=\"wi wi-cloudy\"></i> }\n  }\n\n  changeToInteger(value) {\n    var integer = Math.round(value);\n\n    if(isNaN(integer) === false) {\n      return (integer);\n    }\n  }\n\n  pressure(value) {\n    var pressure = value;\n\n    // Convert pressure from hPa to inHg.\n    if(isNaN(pressure) === false) {\n      pressure = pressure/33.863886666667;\n      pressure = Math.round(pressure);\n\n      return pressure;\n    }\n  }\n\n  sunriseSunset(value) {\n    var seconds = value;\n    var date = new Date(seconds * 1000);\n    var time = date.toLocaleTimeString();\n    \n    return time;\n  }\n\n  wind(value) {\n    var wind = value;\n\n    if(isNaN(wind) === false) {\n      // Convert meters per second to miles per hour.\n      wind = wind/2.23694;\n      // Rounded to the nearest integer.\n      wind = Math.round(wind);\n\n      return wind;\n    }\n  }\n\n  visibility(value) {\n    var visibility = value;\n\n    if(isNaN(visibility) === false) {\n      visibility = visibility * 0.0006213712;\n      visibility = Math.round(visibility);\n\n      return visibility;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"forecast-summary-wrapper\">\n        <div className=\"current-city\"> \n          <h5>Today&#39;s weather in</h5>\n          <h2>{this.props.state.day_1_city.name}</h2>\n          <h3>{this.props.state.day_1_weather.description}</h3>\n          <div className=\"flex\">\n            <section className=\"column-row\">{this.handleWeatherImage(this.props.state.day_1_weather.id)}</section>\n            <section className=\"column-row\">\n              <h4>{this.changeToInteger(this.props.state.day_1_main.temp)}<sup className=\"summary-units\"> °F</sup></h4>\n              <h6>Min: {this.changeToInteger(this.props.state.day_1_main.temp_min)}<sup> °F</sup></h6>\n              <h6>Max: {this.changeToInteger(this.props.state.day_1_main.temp_max)}<sup> °F</sup></h6>\n            </section>\n          </div>\n        </div>\n        <div className=\"current-weather\">\n            <section className=\"column-row\">\n              <h5>Sunrise: <span className=\"forecast-data\">{this.sunriseSunset(this.props.state.day_1_sys.sunrise)} <span className=\"data-type\">GMT -0400</span></span></h5>\n              <h5>Visibility: <span className=\"forecast-data\">{this.visibility(this.props.state.day_1_city.visibility)} <span className=\"data-type\">mi</span></span></h5>\n              <h5>Wind: <span className=\"forecast-data\">{this.wind(this.props.state.day_1_wind.speed)} <span className=\"data-type\">mph</span></span></h5>\n            </section>\n            <section className=\"column-row\">\n              <h5>Sunset: <span className=\"forecast-data\">{this.sunriseSunset(this.props.state.day_1_sys.sunset)} <span className=\"data-type\">GMT -0400</span></span></h5>\n              <h5>Humidity: <span className=\"forecast-data\">{this.props.state.day_1_main.humidity}<span className=\"data-type\">%</span></span></h5>\n              <h5>Pressure: <span className=\"forecast-data\">{this.pressure(this.props.state.day_1_main.pressure)}<span className=\"data-type\"> inHg</span></span></h5>\n            </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ForecastSummary;","import React, { Component } from 'react';\nimport '../weather-icons/weather-icons.min.css';\n\nclass ForecastNextDays extends Component {\n  constructor(){\n    super();\n    this.changeToInteger = this.changeToInteger.bind(this);\n    this.dateFormat = this.dateFormat.bind(this);\n    this.handleWeatherImage = this.handleWeatherImage.bind(this);\n    this.pressure = this.pressure.bind(this);\n    this.wind = this.wind.bind(this);\n  }\n\n  changeToInteger(value) {\n    var integer = Math.round(value);\n\n    if(isNaN(integer) === false) {\n      return (integer);\n    }\n  }\n\n  dateFormat() {\n    if (!this.props.state) {\n      return \"Tomorrow\";\n    }\n    else if (this.props.state.dt_txt !== undefined) {\n      var date = this.props.state.dt_txt.split(' ')[0]; \n      var dayOfWeek = new Date(date).getDay();      \n\n      // console.log(this.props)\n\n      // Show day of the week instead of YYYY-MM-DD format.\n      return isNaN(dayOfWeek) ? null : [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"][dayOfWeek];\n    }\n  }\n\n  handleWeatherImage(id) {\n    // console.log(this.props);\n    // console.log(id);\n    if (id >= 200 && id <= 232) { return <i className=\"wi wi-thunderstorm\"></i> }\n    else if (id >= 300 && id <= 321) { return <i className=\"wi wi-sleet\"></i> }\n    else if (id >= 500 && id <= 531) { return <i className=\"wi wi-showers\"></i> }\n    else if (id >= 600 && id <= 622) { return <i className=\"wi wi-snow\"></i> }\n    else if (id >= 700 && id <= 781) { return <i className=\"wi wi-fog\"></i> }\n    else if (id === 800) { return <i className=\"wi wi-day-cloudy\"></i> }\n    else if (id >= 801 && id <= 804) { return <i className=\"wi wi-cloudy\"></i> }\n  }\n\n  wind(value) {\n    var wind = value;\n\n    if(isNaN(wind) === false) {\n      // Convert meters per second to miles per hour.\n      wind = wind/2.23694;\n      // Rounded to the nearest integer.\n      wind = Math.round(wind);\n\n      return wind;\n    }\n  }\n\n  pressure(value) {\n    var pressure = value;\n\n    // Convert pressure from hPa to inHg.\n    if(isNaN(pressure) === false) {\n      pressure = pressure/33.863886666667;\n      pressure = Math.round(pressure);\n\n      return pressure;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"five-days-container\">\n        <h5>{this.dateFormat()}</h5>\n        <h3>{this.props.weather.description}</h3>\n        <section className=\"five-days-weather-image\">{this.handleWeatherImage(this.props.weather.id)}</section>\n        <section className=\"five-data\">\n          <section className=\"five-data-continue\">\n            <h5>Min: <span className=\"forecast-data\">{this.changeToInteger(this.props.min)}<sup> °F</sup></span></h5>\n            <h5>Max: <span className=\"forecast-data\">{this.changeToInteger(this.props.max)}<sup> °F</sup></span></h5>\n            <h5>Wind: <span className=\"forecast-data\">{this.wind(this.props.wind.speed)} <span className=\"data-type\">mph</span></span></h5>\n            <h5>Humidity: <span className=\"forecast-data\">{this.props.main.humidity}<span className=\"data-type\">%</span></span></h5>\n            <h5>Pressure: <span className=\"forecast-data\">{this.pressure(this.props.main.pressure)}<span className=\"data-type\"> inHg</span></span></h5>\n          </section>\n        </section>\n      </div> \n    );\n  }\n}\n\nexport default ForecastNextDays;","import React, { Component } from 'react';\nimport ForecastSummary from './ForecastSummary';\nimport ForecastNextDays from './ForecastNextDays';\n\n// console.log(\"Forecast is working.\");\n\nclass Forecast extends Component {\n  constructor(){\n    super();\n    this.state = {\n      day_1_city: [],\n      day_1_coord: [],\n      day_1_main: [],\n      day_1_sys: [],\n      day_1_weather: [],\n      day_1_wind: [],\n      day_2: [],\n      day_2_main: [],\n      day_2_weather: [],\n      day_2_wind: [],\n      day_2_max: null,\n      day_2_min: null,\n      day_3: [],\n      day_3_main: [],\n      day_3_weather: [],\n      day_3_wind: [],\n      day_3_max: null,\n      day_3_min: null,\n      day_4: [],\n      day_4_main: [],\n      day_4_weather: [],\n      day_4_wind: [],\n      day_4_max: null,\n      day_4_min: null,\n      day_5: [],\n      day_5_main: [],\n      day_5_weather: [],\n      day_5_wind: [],\n      day_5_max: null,\n      day_5_min: null,    \n    }\n  }\n\n  // Grab the selected city through the params.\n  componentWillMount() {\n    var city = window.location.href.split(\"/\").pop();\n    // console.log(city); \n      if (city !== undefined) {\n        city = city.split('+').join(' ');\n        // console.log(city);\n\n        if (city === this.props.state.first_city.name) {\n          this.setState({\n            day_1_city: this.props.state.first_city,\n            day_1_coord:this.props.state.first_city_coord,\n            day_1_main: this.props.state.first_city_main,\n            day_1_sys: this.props.state.first_city_sys,\n            day_1_weather: this.props.state.first_city_weather,\n            day_1_wind: this.props.state.first_city_wind\n          })\n        }\n        else if (city === this.props.state.second_city.name) {\n          this.setState({\n            day_1_city: this.props.state.second_city,\n            day_1_coord:this.props.state.second_city_coord,\n            day_1_main: this.props.state.second_city_main,\n            day_1_sys: this.props.state.second_city_sys,\n            day_1_weather: this.props.state.second_city_weather,\n            day_1_wind: this.props.state.second_city_wind\n          })\n        }\n        else if (city === this.props.state.third_city.name) {\n          this.setState({\n            day_1_city: this.props.state.third_city,\n            day_1_coord:this.props.state.third_city_coord,\n            day_1_main: this.props.state.third_city_main,\n            day_1_sys: this.props.state.third_city_sys,\n            day_1_weather: this.props.state.third_city_weather,\n            day_1_wind: this.props.state.third_city_wind\n          })\n        }\n        else if (city === this.props.state.fourth_city.name) {\n          this.setState({\n            day_1_city: this.props.state.fourth_city,\n            day_1_coord:this.props.state.fourth_city_coord,\n            day_1_main: this.props.state.fourth_city_main,\n            day_1_sys: this.props.state.fourth_city_sys,\n            day_1_weather: this.props.state.fourth_city_weather,\n            day_1_wind: this.props.state.fourth_city_wind\n          })\n        }\n        else {\n          this.setState({\n            day_1_city: this.props.state.fifth_city,\n            day_1_coord: this.props.state.fifth_city_coord,\n            day_1_main: this.props.state.fifth_city_main,\n            day_1_sys: this.props.state.fifth_city_sys,\n            day_1_weather: this.props.state.fifth_city_weather,\n            day_1_wind: this.props.state.fifth_city_wind\n          })\n        }\n      }\n  }\n\n  componentDidMount() {\n    if (this.state.day_1_city.id !== undefined) {\n      var api = 'https://api.openweathermap.org/data/2.5/forecast';\n      var cityId = \"?id=\" + this.state.day_1_city.id;\n      var system = \"&units=imperial\";\n      /*\n      My two API keys in case of any issue are: \n      c2a8f705fd5c4cdcab53ed003fbf3927\n      9fd9021ddf72d859fb5818cd4beee4f9\n      */\n      const key = '&appid=9fd9021ddf72d859fb5818cd4beee4f9';\n      const url = api + cityId + system + key;\n\n      fetch(url)\n        .then((res) => {\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth()+1;\n        var yyyy = today.getFullYear();\n        if(dd < 10){\n            dd = '0' + dd;\n        } \n        if(mm < 10){\n            mm = '0' + mm;\n        } \n        var yearMonthDay = yyyy+'-'+mm+'-'+dd;\n        // console.log(yearMonthDay);\n\n        var days = [];\n\n        for(var i = 0; i < data.list.length; i += 1) {\n          if(data.list[i].dt_txt.split(' ')[0] !== yearMonthDay && data.list[i].dt_txt.split(' ')[1] === \"03:00:00\") {\n            // console.log(data.list[i])\n            days.push(data.list[i]);\n          }\n        }\n\n        // console.log(days);\n\n        var temp_max = [];\n        var temp_min = [];\n\n        for(var m = 0; m < data.list.length; m += 1) {\n          if(data.list[m].dt_txt.split(' ')[0] !== yearMonthDay) {\n            temp_max.push(data.list[m].main.temp_max);\n            temp_min.push(data.list[m].main.temp_min);    \n          }\n        }\n      \n        // console.log(temp_max);\n        // console.log(temp_min);\n\n        /* \n        Comparing the max and min temperature from different moments of each day.\n        00:00:00, 03:00:00, 06:00:00, 09:00:00, 12:00:00, 15:00:00, 18:00:00, 21:00:00\n        */\n        var maxD2 = Math.max(temp_max[0], temp_max[1], temp_max[2], temp_max[3], temp_max[4], temp_max[5], temp_max[6], temp_max[7]);\n        var minD2 = Math.min(temp_max[0], temp_max[1], temp_max[2], temp_max[3], temp_max[4], temp_max[5], temp_max[6], temp_max[7]);\n        // console.log(\"Max: \" + maxD2 + \" and Min: \" + minD2);\n        var maxD3 = Math.max(temp_max[8], temp_max[9], temp_max[10], temp_max[11], temp_max[12], temp_max[13], temp_max[14], temp_max[15]);\n        var minD3 = Math.min(temp_max[8], temp_max[9], temp_max[10], temp_max[11], temp_max[12], temp_max[13], temp_max[14], temp_max[15]);\n        // console.log(\"Max: \" + maxD3 + \" and Min: \" + minD3);\n        var maxD4 = Math.max(temp_max[16], temp_max[17], temp_max[18], temp_max[19], temp_max[20], temp_max[21], temp_max[22], temp_max[23]);\n        var minD4 = Math.min(temp_max[16], temp_max[17], temp_max[18], temp_max[19], temp_max[20], temp_max[21], temp_max[22], temp_max[23]);\n        // console.log(\"Max: \" + maxD4 + \" and Min: \" + minD4);\n        var maxD5 = Math.max(temp_max[24], temp_max[25], temp_max[26], temp_max[27], temp_max[28], temp_max[29], temp_max[30], temp_max[31]);\n        var minD5 = Math.min(temp_max[24], temp_max[25], temp_max[26], temp_max[27], temp_max[28], temp_max[29], temp_max[30], temp_max[31]);\n        // console.log(\"Max: \" + maxD5 + \" and Min: \" + minD5);\n\n        // Saving the next four days.\n        this.setState({\n          day_2: days[0],\n          day_2_main: days[0].main,\n          day_2_weather: days[0].weather[0],\n          day_2_wind: days[0].wind,\n          day_2_max: maxD2,\n          day_2_min: minD2,\n          day_3: days[1],\n          day_3_main: days[1].main,\n          day_3_weather: days[1].weather[0],\n          day_3_wind: days[1].wind,\n          day_3_max: maxD3,\n          day_3_min: minD3,\n          day_4: days[2],\n          day_4_main: days[2].main,\n          day_4_weather: days[2].weather[0],\n          day_4_wind: days[2].wind,\n          day_4_max: maxD4,\n          day_4_min: minD4,\n          day_5: days[3],\n          day_5_main: days[3].main,\n          day_5_weather: days[3].weather[0],\n          day_5_wind: days[3].wind,\n          day_5_max: maxD5,\n          day_5_min: minD5,\n        });\n      }).catch((error) => {\n      console.log(error);\n      })\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"forecast-container\">\n        <ForecastSummary state={this.state} />\n        <section className=\"five-day-forecast\">\n          <section className=\"row\">\n          <ForecastNextDays \n            tomorrow = {this.state.day_2}\n            main = {this.state.day_2_main}\n            weather = {this.state.day_2_weather}\n            wind = {this.state.day_2_wind}\n            max = {this.state.day_2_max}\n            min = {this.state.day_2_min} />\n          <ForecastNextDays \n            state = {this.state.day_3}\n            main = {this.state.day_3_main}\n            weather = {this.state.day_3_weather}\n            wind = {this.state.day_3_wind}\n            max = {this.state.day_3_max}\n            min = {this.state.day_3_min} />\n          </section>\n          <section className=\"row\">\n          <ForecastNextDays \n            state = {this.state.day_4}\n            main = {this.state.day_4_main}\n            weather = {this.state.day_4_weather}\n            wind = {this.state.day_4_wind}\n            max = {this.state.day_4_max}\n            min = {this.state.day_4_min} />\n          <ForecastNextDays \n            state = {this.state.day_5}\n            main = {this.state.day_5_main}\n            weather = {this.state.day_5_weather}\n            wind = {this.state.day_5_wind}\n            max = {this.state.day_5_max}\n            min = {this.state.day_5_min} />\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Forecast;","import React, { Component } from 'react';\n\n// console.log(\"Footer is working.\");\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p className=\"footer\">Handmade by <a className=\"footer\" href=\"https://github.com/francheska-guzman\" \n        rel=\"noopener noreferrer\" target=\"_blank\">Francheska Guzman</a>.</p>\n      </footer> \n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\n// console.log(\"Header is working.\");\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1>Weather Forecast</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../weather-icons/weather-icons.min.css';\n\n// console.log(\"HomeSummary is working.\");\n\nclass HomeSummary extends Component {\n  constructor(){\n    super();\n    this.handleParams = this.handleParams.bind(this);\n    this.handleWeatherImage = this.handleWeatherImage.bind(this);\n    this.handleWeatherTemperature = this.handleWeatherTemperature.bind(this);\n}\n\n  // Change spaces to a + sign to avoid url show %20.\n  handleParams() {\n    var city = this.props.name;\n    \n    if (city !== undefined) {\n      city = city.replace(/ /g, '+');\n      return city;\n    }\n  }\n\n  /* I used https://openweathermap.org/weather-conditions to identify each range of id with the weather condition. */\n  handleWeatherImage(id) {\n    // console.log(id);\n    if (id >= 200 && id <= 232) { return <i className=\"wi wi-thunderstorm\"></i> }\n    else if (id >= 300 && id <= 321) { return <i className=\"wi wi-sleet\"></i> }\n    else if (id >= 500 && id <= 531) { return <i className=\"wi wi-showers\"></i> }\n    else if (id >= 600 && id <= 622) { return <i className=\"wi wi-snow\"></i> }\n    else if (id >= 700 && id <= 781) { return <i className=\"wi wi-fog\"></i> }\n    else if (id === 800) { return <i className=\"wi wi-day-cloudy\"></i> }\n    else if (id >= 801 && id <= 804) { return <i className=\"wi wi-cloudy\"></i> }\n  }\n\n  handleWeatherTemperature(value) {\n    var temperature = Math.round(value);\n\n    if(isNaN(temperature) === false) {\n      return <h4>{temperature} <sup className=\"summary-units\">°F</sup></h4>\n    }\n  }\n\n  render() {\n    return (\n      <Link className=\"summary-link\" to={`/weather-forecast/${this.handleParams()}`}>\n        <div className=\"summary-container\"> \n          <h2>{this.props.name}</h2>\n          <h3>{this.props.weather}</h3>\n          <div className=\"flex\">\n            <section className=\"row-column weather-icon\">{this.handleWeatherImage(this.props.id)}</section>\n            <section className=\"row-column\">{this.handleWeatherTemperature(this.props.temp)}</section>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default HomeSummary;","import React, { Component } from 'react';\nimport HomeSummary from './HomeSummary';\n\n// console.log(\"Home is working.\");\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home-container\"> \n        <section className=\"home-summary\">\n          <HomeSummary \n            name={this.props.state.first_city.name}  \n            temp={this.props.state.first_city_main.temp} \n            weather={this.props.state.first_city_weather.description}\n            id={this.props.state.first_city_weather.id}\n          />\n          <HomeSummary \n            name={this.props.state.second_city.name} \n            temp={this.props.state.second_city_main.temp} \n            weather={this.props.state.second_city_weather.description}\n            id={this.props.state.second_city_weather.id}\n          />\n        </section>\n        <section className=\"home-summary\">\n          <HomeSummary \n            name={this.props.state.third_city.name} \n            temp={this.props.state.third_city_main.temp} \n            weather={this.props.state.third_city_weather.description}\n            id={this.props.state.third_city_weather.id}\n          />\n          <HomeSummary \n            name={this.props.state.fourth_city.name} \n            temp={this.props.state.fourth_city_main.temp} \n            weather={this.props.state.fourth_city_weather.description}\n            id={this.props.state.fourth_city_weather.id}\n          />\n        </section>\n        <section className=\"home-summary\">\n          <HomeSummary \n            name={this.props.state.fifth_city.name} \n            temp={this.props.state.fifth_city_main.temp} \n            weather={this.props.state.fifth_city_weather.description}\n            id={this.props.state.fifth_city_weather.id}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// console.log(\"Navigation is working.\");\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <nav>\n        <li className=\"navigation-link\">\n          <NavLink to=\"/weather-forecast\">\n            <i className=\"fa fa-chevron-left\"></i>\n          </NavLink>\n        </li>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport './App.css';\nimport ReactGA from 'react-ga';\nimport Forecast from './components/Forecast';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Navigation from './components/Navigation';\nimport {\n        BrowserRouter as Router,\n        Route,\n        Switch\n        } from 'react-router-dom';\n\nconsole.log(\"%cWelcome to the Weather Forecast!\", \"color: #ad8401; font-size: 16px\");\nconsole.log(\"%cDeveloped by Francheska Guzman.\", \"color: #0f3150; font-size: 14px\");\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      first_city: [],\n      first_city_coord: [],\n      first_city_main: [],\n      first_city_sys: [],\n      first_city_weather: [],\n      first_city_wind: [],\n      second_city: [],\n      second_city_coord: [],\n      second_city_main: [],\n      second_city_sys: [],\n      second_city_weather: [],\n      second_city_wind: [],\n      third_city: [],\n      third_city_coord: [],\n      third_city_main: [],\n      third_city_sys: [],\n      third_city_weather: [],\n      third_city_wind: [],\n      fourth_city: [],\n      fourth_city_clouds: [],\n      fourth_city_main: [],\n      fourth_city_sys: [],\n      fourth_city_weather: [],\n      fourth_city_wind: [],\n      fifth_city: [],\n      fifth_city_coord: [],\n      fifth_city_main: [],\n      fifth_city_sys: [],\n      fifth_city_weather: [],\n      fifth_city_wind: []\n    }\n  }\n\n// To try other cities: http://openweathermap.org/help/city_list.txt \n\t\n  initializeReactGA() {\n\tReactGA.initialize('UA-132345211-1');\n\tReactGA.pageview('/weather-forecast');\n  }\n\n  componentWillMount() {\n    var api = 'https://api.openweathermap.org/data/2.5/';\n    var cities = 'group?id=5128581,4887398,4180439,5809844,5391959';\n    var system = \"&units=imperial\";\n    /*\n    My two API keys in case of any issue are: \n    c2a8f705fd5c4cdcab53ed003fbf3927\n    9fd9021ddf72d859fb5818cd4beee4f9\n    */\n    const key = '&appid=9fd9021ddf72d859fb5818cd4beee4f9';\n    const url = api + cities + system + key;\n\n    // Making a call to the openweathermap API, that get the object of five cities.\n    fetch(url)\n      .then((res) => {\n       return res.json();\n    }).then(data => {\n    this.setState({\n      first_city: data.list[0],\n      first_city_coord: data.list[0].coord,\n      first_city_main: data.list[0].main,\n      first_city_sys: data.list[0].sys,\n      first_city_weather: data.list[0].weather[0],\n      first_city_wind: data.list[0].wind,\n      second_city: data.list[1],\n      second_city_coord: data.list[1].coord,\n      second_city_main: data.list[1].main,\n      second_city_sys: data.list[1].sys,\n      second_city_weather: data.list[1].weather[0],\n      second_city_wind: data.list[1].wind,\n      third_city: data.list[2],\n      third_city_coord: data.list[2].coord,\n      third_city_main: data.list[2].main,\n      third_city_sys: data.list[2].sys,\n      third_city_weather: data.list[2].weather[0],\n      third_city_wind: data.list[2].wind,\n      fourth_city: data.list[3],\n      fourth_city_coord: data.list[3].coord,\n      fourth_city_main: data.list[3].main,\n      fourth_city_sys: data.list[3].sys,\n      fourth_city_weather: data.list[3].weather[0],\n      fourth_city_wind: data.list[3].wind,\n      fifth_city: data.list[4],\n      fifth_city_coord: data.list[4].coord,\n      fifth_city_main: data.list[4].main,\n      fifth_city_sys: data.list[4].sys,\n      fifth_city_weather: data.list[4].weather[0],\n      fifth_city_wind: data.list[4].wind\n      })\n      // console.log(this.state);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app-container\">\n          <Route startsWith path=\"/weather-forecast/\" component={() =>\n              (<Header />) }/>\n          <Route path=\"/weather-forecast/:city\" component={() =>\n              (<Navigation />) }/>\n          <Switch>\n            <Route exact path=\"/weather-forecast/\" component={() => \n                (<Home state={this.state} />) }/>\n            <Route path=\"/weather-forecast/:city\" component={() => \n                (<Forecast state={this.state} />) }/>\n          </Switch>\n          <Route startsWith path=\"/weather-forecast/\" component={() =>\n              (<Footer />) }/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}